version: "3.9"
services:
  broker:
    image: redpandadata/redpanda:latest
    command: ["redpanda","start","--overprovisioned","--smp","1","--memory","1G",
              "--reserve-memory","0M","--node-id","0",
              "--kafka-addr","0.0.0.0:9092","--advertise-kafka-addr","broker:9092",
              "--rpc-addr","0.0.0.0:33145","--advertise-rpc-addr","broker:33145",
              "--pandaproxy-addr","0.0.0.0:8082","--advertise-pandaproxy-addr","broker:8082"]
    ports: ["9092:9092","9644:9644","8081:8081","8082:8082"]

  schema-registry:
    image: docker.redpanda.com/vectorized/redpanda-schema-registry:latest
    environment:
      SCHEMA_REGISTRY_KAFKA_BROKERS: broker:9092
    ports: ["8081:8081"]

  normalizer:
    build: ./normalizer
    environment:
      BROKERS: broker:9092
      SCHEMA_URL: http://schema-registry:8081
    depends_on: [broker, schema-registry]
    volumes: ["data:/data"]

  enricher:
    build: ./enricher
    environment:
      BROKERS: broker:9092
    depends_on: [broker]
    volumes: ["data:/data"]

  feature-rules:
    build: ./feature-rules
    environment:
      BROKERS: broker:9092
      DATA_DIR: /data
      DUCKDB_PATH: /data/metrics.duckdb
    depends_on: [broker]
    volumes: ["data:/data"]

  api:
    build: ./api
    environment:
      BROKERS: broker:9092
      DATA_DIR: /data
      DUCKDB_PATH: /data/metrics.duckdb
    ports: ["8088:8088"]
    depends_on: [broker]
    volumes: ["data:/data"]

  ui:
    build: ./ui
    ports: ["8080:80"]
    depends_on: [api]

volumes:
  data:
